//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjetGestionStock.ServiceGestionStock {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceGestionStock.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MetierGestionStock.CompositeType GetDataUsingDataContract(MetierGestionStock.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.CompositeType> GetDataUsingDataContractAsync(MetierGestionStock.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListProduit", ReplyAction="http://tempuri.org/IService1/getListProduitResponse")]
        MetierGestionStock.Model.produit[] getListProduit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListProduit", ReplyAction="http://tempuri.org/IService1/getListProduitResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.produit[]> getListProduitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/modifierProduit", ReplyAction="http://tempuri.org/IService1/modifierProduitResponse")]
        void modifierProduit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/modifierProduit", ReplyAction="http://tempuri.org/IService1/modifierProduitResponse")]
        System.Threading.Tasks.Task modifierProduitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduit", ReplyAction="http://tempuri.org/IService1/addProduitResponse")]
        bool addProduit(MetierGestionStock.Model.produit p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduit", ReplyAction="http://tempuri.org/IService1/addProduitResponse")]
        System.Threading.Tasks.Task<bool> addProduitAsync(MetierGestionStock.Model.produit p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/supprimerProduit", ReplyAction="http://tempuri.org/IService1/supprimerProduitResponse")]
        bool supprimerProduit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/supprimerProduit", ReplyAction="http://tempuri.org/IService1/supprimerProduitResponse")]
        System.Threading.Tasks.Task<bool> supprimerProduitAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListCategorie", ReplyAction="http://tempuri.org/IService1/getListCategorieResponse")]
        MetierGestionStock.Model.categorieproduit[] getListCategorie();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListCategorie", ReplyAction="http://tempuri.org/IService1/getListCategorieResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.categorieproduit[]> getListCategorieAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProdJoin", ReplyAction="http://tempuri.org/IService1/getProdJoinResponse")]
        MetierGestionStock.Model.JointureProduit[] getProdJoin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProdJoin", ReplyAction="http://tempuri.org/IService1/getProdJoinResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.JointureProduit[]> getProdJoinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getReportJoin", ReplyAction="http://tempuri.org/IService1/getReportJoinResponse")]
        MetierGestionStock.Model.ReportProduitStock[] getReportJoin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getReportJoin", ReplyAction="http://tempuri.org/IService1/getReportJoinResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.ReportProduitStock[]> getReportJoinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListStocks", ReplyAction="http://tempuri.org/IService1/getListStocksResponse")]
        MetierGestionStock.Model.stock[] getListStocks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListStocks", ReplyAction="http://tempuri.org/IService1/getListStocksResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.stock[]> getListStocksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchProduit", ReplyAction="http://tempuri.org/IService1/searchProduitResponse")]
        MetierGestionStock.Model.JointureProduit[] searchProduit(string libelle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchProduit", ReplyAction="http://tempuri.org/IService1/searchProduitResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.JointureProduit[]> searchProduitAsync(string libelle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/activerDesactiverUser", ReplyAction="http://tempuri.org/IService1/activerDesactiverUserResponse")]
        void activerDesactiverUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/activerDesactiverUser", ReplyAction="http://tempuri.org/IService1/activerDesactiverUserResponse")]
        System.Threading.Tasks.Task activerDesactiverUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        bool addUser(MetierGestionStock.Model.utilisateur user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        System.Threading.Tasks.Task<bool> addUserAsync(MetierGestionStock.Model.utilisateur user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search", ReplyAction="http://tempuri.org/IService1/searchResponse")]
        MetierGestionStock.Model.JointureProduit[] search(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search", ReplyAction="http://tempuri.org/IService1/searchResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.JointureProduit[]> searchAsync(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchCategorie", ReplyAction="http://tempuri.org/IService1/searchCategorieResponse")]
        MetierGestionStock.Model.categorieproduit[] searchCategorie(string txt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchCategorie", ReplyAction="http://tempuri.org/IService1/searchCategorieResponse")]
        System.Threading.Tasks.Task<MetierGestionStock.Model.categorieproduit[]> searchCategorieAsync(string txt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ProjetGestionStock.ServiceGestionStock.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ProjetGestionStock.ServiceGestionStock.IService1>, ProjetGestionStock.ServiceGestionStock.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MetierGestionStock.CompositeType GetDataUsingDataContract(MetierGestionStock.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.CompositeType> GetDataUsingDataContractAsync(MetierGestionStock.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public MetierGestionStock.Model.produit[] getListProduit() {
            return base.Channel.getListProduit();
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.produit[]> getListProduitAsync() {
            return base.Channel.getListProduitAsync();
        }
        
        public void modifierProduit() {
            base.Channel.modifierProduit();
        }
        
        public System.Threading.Tasks.Task modifierProduitAsync() {
            return base.Channel.modifierProduitAsync();
        }
        
        public bool addProduit(MetierGestionStock.Model.produit p) {
            return base.Channel.addProduit(p);
        }
        
        public System.Threading.Tasks.Task<bool> addProduitAsync(MetierGestionStock.Model.produit p) {
            return base.Channel.addProduitAsync(p);
        }
        
        public bool supprimerProduit(int id) {
            return base.Channel.supprimerProduit(id);
        }
        
        public System.Threading.Tasks.Task<bool> supprimerProduitAsync(int id) {
            return base.Channel.supprimerProduitAsync(id);
        }
        
        public MetierGestionStock.Model.categorieproduit[] getListCategorie() {
            return base.Channel.getListCategorie();
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.categorieproduit[]> getListCategorieAsync() {
            return base.Channel.getListCategorieAsync();
        }
        
        public MetierGestionStock.Model.JointureProduit[] getProdJoin() {
            return base.Channel.getProdJoin();
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.JointureProduit[]> getProdJoinAsync() {
            return base.Channel.getProdJoinAsync();
        }
        
        public MetierGestionStock.Model.ReportProduitStock[] getReportJoin() {
            return base.Channel.getReportJoin();
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.ReportProduitStock[]> getReportJoinAsync() {
            return base.Channel.getReportJoinAsync();
        }
        
        public MetierGestionStock.Model.stock[] getListStocks() {
            return base.Channel.getListStocks();
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.stock[]> getListStocksAsync() {
            return base.Channel.getListStocksAsync();
        }
        
        public MetierGestionStock.Model.JointureProduit[] searchProduit(string libelle) {
            return base.Channel.searchProduit(libelle);
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.JointureProduit[]> searchProduitAsync(string libelle) {
            return base.Channel.searchProduitAsync(libelle);
        }
        
        public void activerDesactiverUser(int id) {
            base.Channel.activerDesactiverUser(id);
        }
        
        public System.Threading.Tasks.Task activerDesactiverUserAsync(int id) {
            return base.Channel.activerDesactiverUserAsync(id);
        }
        
        public bool addUser(MetierGestionStock.Model.utilisateur user) {
            return base.Channel.addUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> addUserAsync(MetierGestionStock.Model.utilisateur user) {
            return base.Channel.addUserAsync(user);
        }
        
        public MetierGestionStock.Model.JointureProduit[] search(string s) {
            return base.Channel.search(s);
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.JointureProduit[]> searchAsync(string s) {
            return base.Channel.searchAsync(s);
        }
        
        public MetierGestionStock.Model.categorieproduit[] searchCategorie(string txt) {
            return base.Channel.searchCategorie(txt);
        }
        
        public System.Threading.Tasks.Task<MetierGestionStock.Model.categorieproduit[]> searchCategorieAsync(string txt) {
            return base.Channel.searchCategorieAsync(txt);
        }
    }
}
